{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rowdy Killer\\\\Desktop\\\\Chat\\\\src\\\\components\\\\Search.jsx\";\nimport React, { useContext, useState } from \"react\";\n// import {\n//   collection,\n//   query,\n//   where,\n//   getDocs,\n//   setDoc,\n//   doc,\n//   updateDoc,\n//   serverTimestamp,\n//   getDoc,\n// } from \"firebase/firestore\";\n// import { db } from \"../firebase\";\n// import { AuthContext } from \"../context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Search = () => {\n  //   const [username, setUsername] = useState(\"\");\n  //   const [user, setUser] = useState(null);\n  //   const [err, setErr] = useState(false);\n\n  //   const { currentUser } = useContext(AuthContext);\n\n  //   const handleSearch = async () => {\n  //     const q = query(\n  //       collection(db, \"users\"),\n  //       where(\"displayName\", \"==\", username)\n  //     );\n\n  //     try {\n  //       const querySnapshot = await getDocs(q);\n  //       querySnapshot.forEach((doc) => {\n  //         setUser(doc.data());\n  //       });\n  //     } catch (err) {\n  //       setErr(true);\n  //     }\n  //   };\n\n  //   const handleKey = (e) => {\n  //     e.code === \"Enter\" && handleSearch();\n  //   };\n\n  //   const handleSelect = async () => {\n  //     //check whether the group(chats in firestore) exists, if not create\n  //     const combinedId =\n  //       currentUser.uid > user.uid\n  //         ? currentUser.uid + user.uid\n  //         : user.uid + currentUser.uid;\n  //     try {\n  //       const res = await getDoc(doc(db, \"chats\", combinedId));\n\n  //       if (!res.exists()) {\n  //         //create a chat in chats collection\n  //         await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\n\n  //         //create user chats\n  //         await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n  //           [combinedId + \".userInfo\"]: {\n  //             uid: user.uid,\n  //             displayName: user.displayName,\n  //             photoURL: user.photoURL,\n  //           },\n  //           [combinedId + \".date\"]: serverTimestamp(),\n  //         });\n\n  //         await updateDoc(doc(db, \"userChats\", user.uid), {\n  //           [combinedId + \".userInfo\"]: {\n  //             uid: currentUser.uid,\n  //             displayName: currentUser.displayName,\n  //             photoURL: currentUser.photoURL,\n  //           },\n  //           [combinedId + \".date\"]: serverTimestamp(),\n  //         });\n  //       }\n  //     } catch (err) {}\n\n  //     setUser(null);\n  //     setUsername(\"\")\n  //   };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"searchForm\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Find a user\",\n        onKeyDown: handleKey,\n        onChange: e => setUsername(e.target.value),\n        value: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), err && /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"User not found!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }, this), user && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"userChat\",\n      onClick: handleSelect,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: user.photoURL,\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"userChatInfo\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          children: user.displayName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_c = Search;\nexport default Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","useContext","useState","jsxDEV","_jsxDEV","Search","className","children","type","placeholder","onKeyDown","handleKey","onChange","e","setUsername","target","value","username","fileName","_jsxFileName","lineNumber","columnNumber","err","user","onClick","handleSelect","src","photoURL","alt","displayName","_c","$RefreshReg$"],"sources":["C:/Users/Rowdy Killer/Desktop/Chat/src/components/Search.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\n// import {\n//   collection,\n//   query,\n//   where,\n//   getDocs,\n//   setDoc,\n//   doc,\n//   updateDoc,\n//   serverTimestamp,\n//   getDoc,\n// } from \"firebase/firestore\";\n// import { db } from \"../firebase\";\n// import { AuthContext } from \"../context/AuthContext\";\nconst Search = () => {\n//   const [username, setUsername] = useState(\"\");\n//   const [user, setUser] = useState(null);\n//   const [err, setErr] = useState(false);\n\n//   const { currentUser } = useContext(AuthContext);\n\n//   const handleSearch = async () => {\n//     const q = query(\n//       collection(db, \"users\"),\n//       where(\"displayName\", \"==\", username)\n//     );\n\n//     try {\n//       const querySnapshot = await getDocs(q);\n//       querySnapshot.forEach((doc) => {\n//         setUser(doc.data());\n//       });\n//     } catch (err) {\n//       setErr(true);\n//     }\n//   };\n\n//   const handleKey = (e) => {\n//     e.code === \"Enter\" && handleSearch();\n//   };\n\n//   const handleSelect = async () => {\n//     //check whether the group(chats in firestore) exists, if not create\n//     const combinedId =\n//       currentUser.uid > user.uid\n//         ? currentUser.uid + user.uid\n//         : user.uid + currentUser.uid;\n//     try {\n//       const res = await getDoc(doc(db, \"chats\", combinedId));\n\n//       if (!res.exists()) {\n//         //create a chat in chats collection\n//         await setDoc(doc(db, \"chats\", combinedId), { messages: [] });\n\n//         //create user chats\n//         await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n//           [combinedId + \".userInfo\"]: {\n//             uid: user.uid,\n//             displayName: user.displayName,\n//             photoURL: user.photoURL,\n//           },\n//           [combinedId + \".date\"]: serverTimestamp(),\n//         });\n\n//         await updateDoc(doc(db, \"userChats\", user.uid), {\n//           [combinedId + \".userInfo\"]: {\n//             uid: currentUser.uid,\n//             displayName: currentUser.displayName,\n//             photoURL: currentUser.photoURL,\n//           },\n//           [combinedId + \".date\"]: serverTimestamp(),\n//         });\n//       }\n//     } catch (err) {}\n\n//     setUser(null);\n//     setUsername(\"\")\n//   };\n  return (\n    <div className=\"search\">\n      <div className=\"searchForm\">\n        <input\n          type=\"text\"\n          placeholder=\"Find a user\"\n          onKeyDown={handleKey}\n          onChange={(e) => setUsername(e.target.value)}\n          value={username}\n        />\n      </div>\n      {err && <span>User not found!</span>}\n      {user && (\n        <div className=\"userChat\" onClick={handleSelect}>\n          <img src={user.photoURL} alt=\"\" />\n          <div className=\"userChatInfo\">\n            <span>{user.displayName}</span>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Search;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACrB;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACE,oBACED,OAAA;IAAKE,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBH,OAAA;MAAKE,SAAS,EAAC,YAAY;MAAAC,QAAA,eACzBH,OAAA;QACEI,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBC,SAAS,EAAEC,SAAU;QACrBC,QAAQ,EAAGC,CAAC,IAAKC,WAAW,CAACD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAE;QAC7CA,KAAK,EAAEC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLC,GAAG,iBAAIlB,OAAA;MAAAG,QAAA,EAAM;IAAe;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EACnCE,IAAI,iBACHnB,OAAA;MAAKE,SAAS,EAAC,UAAU;MAACkB,OAAO,EAAEC,YAAa;MAAAlB,QAAA,gBAC9CH,OAAA;QAAKsB,GAAG,EAAEH,IAAI,CAACI,QAAS;QAACC,GAAG,EAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClCjB,OAAA;QAAKE,SAAS,EAAC,cAAc;QAAAC,QAAA,eAC3BH,OAAA;UAAAG,QAAA,EAAOgB,IAAI,CAACM;QAAW;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACS,EAAA,GAtFIzB,MAAM;AAwFZ,eAAeA,MAAM;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}