{"ast":null,"code":"// import React, { useContext, useState } from \"react\";\n// import Img from \"../img/img.png\";\n// import Attach from \"../img/attach.png\";\n// import { AuthContext } from \"../context/AuthContext\";\n// import { ChatContext } from \"../context/ChatContext\";\n// import {\n//   arrayUnion,\n//   doc,\n//   serverTimestamp,\n//   Timestamp,\n//   updateDoc,\n// } from \"firebase/firestore\";\n// import { db, storage } from \"../firebase\";\n// import { v4 as uuid } from \"uuid\";\n// import { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\n\n// const Input = () => {\n//   const [text, setText] = useState(\"\");\n//   const [img, setImg] = useState(null);\n\n//   const { currentUser } = useContext(AuthContext);\n//   const { data } = useContext(ChatContext);\n\n//   const handleSend = async () => {\n//     if (img) {\n//       const storageRef = ref(storage, uuid());\n\n//       const uploadTask = uploadBytesResumable(storageRef, img);\n\n//       uploadTask.on(\n//         (error) => {\n//           //TODO:Handle Error\n//         },\n//         () => {\n//           getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n//             await updateDoc(doc(db, \"chats\", data.chatId), {\n//               messages: arrayUnion({\n//                 id: uuid(),\n//                 text,\n//                 senderId: currentUser.uid,\n//                 date: Timestamp.now(),\n//                 img: downloadURL,\n//               }),\n//             });\n//           });\n//         }\n//       );\n//     } else {\n//       await updateDoc(doc(db, \"chats\", data.chatId), {\n//         messages: arrayUnion({\n//           id: uuid(),\n//           text,\n//           senderId: currentUser.uid,\n//           date: Timestamp.now(),\n//         }),\n//       });\n//     }\n\n//     await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n//       [data.chatId + \".lastMessage\"]: {\n//         text,\n//       },\n//       [data.chatId + \".date\"]: serverTimestamp(),\n//     });\n\n//     await updateDoc(doc(db, \"userChats\", data.user.uid), {\n//       [data.chatId + \".lastMessage\"]: {\n//         text,\n//       },\n//       [data.chatId + \".date\"]: serverTimestamp(),\n//     });\n\n//     setText(\"\");\n//     setImg(null);\n//   };\n//   return (\n//     <div className=\"input\">\n//       <input\n//         type=\"text\"\n//         placeholder=\"Type something...\"\n//         onChange={(e) => setText(e.target.value)}\n//         value={text}\n//       />\n//       <div className=\"send\">\n//         <img src={Attach} alt=\"\" />\n//         <input\n//           type=\"file\"\n//           style={{ display: \"none\" }}\n//           id=\"file\"\n//           onChange={(e) => setImg(e.target.files[0])}\n//         />\n//         <label htmlFor=\"file\">\n//           <img src={Img} alt=\"\" />\n//         </label>\n//         <button onClick={handleSend}>Send</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Input;","map":{"version":3,"names":[],"sources":["C:/Users/Rowdy Killer/Desktop/Chat/src/components/Input.jsx"],"sourcesContent":["// import React, { useContext, useState } from \"react\";\n// import Img from \"../img/img.png\";\n// import Attach from \"../img/attach.png\";\n// import { AuthContext } from \"../context/AuthContext\";\n// import { ChatContext } from \"../context/ChatContext\";\n// import {\n//   arrayUnion,\n//   doc,\n//   serverTimestamp,\n//   Timestamp,\n//   updateDoc,\n// } from \"firebase/firestore\";\n// import { db, storage } from \"../firebase\";\n// import { v4 as uuid } from \"uuid\";\n// import { getDownloadURL, ref, uploadBytesResumable } from \"firebase/storage\";\n\n// const Input = () => {\n//   const [text, setText] = useState(\"\");\n//   const [img, setImg] = useState(null);\n\n//   const { currentUser } = useContext(AuthContext);\n//   const { data } = useContext(ChatContext);\n\n//   const handleSend = async () => {\n//     if (img) {\n//       const storageRef = ref(storage, uuid());\n\n//       const uploadTask = uploadBytesResumable(storageRef, img);\n\n//       uploadTask.on(\n//         (error) => {\n//           //TODO:Handle Error\n//         },\n//         () => {\n//           getDownloadURL(uploadTask.snapshot.ref).then(async (downloadURL) => {\n//             await updateDoc(doc(db, \"chats\", data.chatId), {\n//               messages: arrayUnion({\n//                 id: uuid(),\n//                 text,\n//                 senderId: currentUser.uid,\n//                 date: Timestamp.now(),\n//                 img: downloadURL,\n//               }),\n//             });\n//           });\n//         }\n//       );\n//     } else {\n//       await updateDoc(doc(db, \"chats\", data.chatId), {\n//         messages: arrayUnion({\n//           id: uuid(),\n//           text,\n//           senderId: currentUser.uid,\n//           date: Timestamp.now(),\n//         }),\n//       });\n//     }\n\n//     await updateDoc(doc(db, \"userChats\", currentUser.uid), {\n//       [data.chatId + \".lastMessage\"]: {\n//         text,\n//       },\n//       [data.chatId + \".date\"]: serverTimestamp(),\n//     });\n\n//     await updateDoc(doc(db, \"userChats\", data.user.uid), {\n//       [data.chatId + \".lastMessage\"]: {\n//         text,\n//       },\n//       [data.chatId + \".date\"]: serverTimestamp(),\n//     });\n\n//     setText(\"\");\n//     setImg(null);\n//   };\n//   return (\n//     <div className=\"input\">\n//       <input\n//         type=\"text\"\n//         placeholder=\"Type something...\"\n//         onChange={(e) => setText(e.target.value)}\n//         value={text}\n//       />\n//       <div className=\"send\">\n//         <img src={Attach} alt=\"\" />\n//         <input\n//           type=\"file\"\n//           style={{ display: \"none\" }}\n//           id=\"file\"\n//           onChange={(e) => setImg(e.target.files[0])}\n//         />\n//         <label htmlFor=\"file\">\n//           <img src={Img} alt=\"\" />\n//         </label>\n//         <button onClick={handleSend}>Send</button>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Input;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}